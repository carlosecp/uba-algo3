TestCase subclass: #LlamadaInternacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaInternacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:36'!test01AlObtenerInformacionDeUnaLlamadaInternacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaInternacional conDuracion: 10 conHorario: 10 conTarifa: 10 conDestino: 'Nuketown'.		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a Nuketown a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaNacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaNacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:34'!test01AlObtenerInformacionDeUnaLlamadaNacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaNacional conDuracion: 10 conHorario: 10 conTarifa: 10.		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:14'!test03TarifaInvalidaAlCrearUnaLlamadaConTarifaNegativa	| llamada |	llamada := Llamada new.		self should: [		llamada tarifa: -69.	] raise: TarifaInvalida ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:45'!test09SeCalculaElCostoConDescuentoDeUnaLlamadaYSeAplicaUnDescuentoDel10PorCiento	| llamada montoEsperadoAPagar |		montoEsperadoAPagar := 540.	llamada := Llamada new.	llamada duracion: 60.	llamada tarifa: 10.		self assert: ( llamada costoTotalConDescuento ) equals: montoEsperadoAPagar! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:26'!test07SeParaUnaLlamadaDeCortaDuracionNoSeAplicaDescuento	| llamada descuentoEsperado |		descuentoEsperado := 0.	llamada := Llamada new.	llamada duracion: 29.		self assert: ( llamada calcularPorcentajeDescuento ) equals: descuentoEsperado ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:26'!test08SeCalculaElCostoSinDescuentoDeUnaLlamadaYSeObtieneLaTarifaPorLaDuracion	| llamada montoEsperadoAPagar |		montoEsperadoAPagar := 100.	llamada := Llamada new.	llamada duracion: 10.	llamada tarifa: 10.		self assert: ( llamada costoTotalSinDescuento ) equals: montoEsperadoAPagar! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:25'!test06SeParaUnaLlamadaDeLargaDuracionElDescuentoEsIgualAl10PorCiento	| llamada descuentoEsperado |		descuentoEsperado := 0.1.	llamada := Llamada new.	llamada duracion: 69.		self assert: ( llamada calcularPorcentajeDescuento ) equals: descuentoEsperado ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:14'!test01DuracionInvalidaAlCrearUnaLlamadaConDuracionNegativa	| llamada |	llamada := Llamada new.		self should: [			llamada duracion: -69.	] raise: DuracionInvalida ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:14'!test02HorarioInvalidoAlCrearUnaLlamadaConHorarioFueraDelRangoDe24Horas	| llamada |	llamada := Llamada new.		self should: [		llamada horario: -69.	] raise: HorarioInvalido ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/23/2022 23:15'!test04LlamadaDeMasDe30MinutosEsLlamadaDeLargaDuracion	| llamada |	llamada := Llamada new.	llamada duracion: 69.		self assert: ( llamada esDeLargaDuracion )! !TestCase subclass: #TeleAlgoTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test2SeRegistraUnaLlamadaNacionalEnHoraHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 102. "El abono mas el costo de todas las llamadas"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	"El horario es un numero natural que va desde la hora 1 a la hora 24"	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario habil es de 0,2 $"	"El horario habil es de 8 a 20"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test5SeRegistraUnaLlamadaInternacionalYOtraNacionalEnHorarioHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	montoEsperadoAPagar := abonoMensual + 20 + 2.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 2.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Paraguay'.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test4SeRegistraUnaLlamadaInternacionalYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 110.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Uruguay'.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test1SeFacturanLasLlamadasDeUnUsuarioQueNoRealizoLlamadasDuranteElMesYPagaSoloElAbonoMensualFijo	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 100.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test3SeRegistraUnaLlamadaNacionallYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 101.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario no habil es de 0,1 $"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/3/2022 19:43'!test6SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	teleAlgo registrarLlamadaInternacionalCon: 20 HechaEnElHorario: 24 Hacia: 'Paraguay'.	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'La llamada mas costosa: La llamada se hizo a Paraguay a las 24 hs durando 20 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test7SeRegistraUnaLlamadaQueAlDurarMasDe30MinutosSeLeAplicaUnDescuentoDel10PorCiento	| teleAlgo abonoMensual montoEsperadoAPagar |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	montoEsperadoAPagar := 103.6.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 40 HechaEnElHorario: 24.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !Error subclass: #DuracionInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #HorarioInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Llamada	instanceVariableNames: 'duracion horario tarifa'	classVariableNames: ''	package: 'TP1'!!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 22:58'!tarifa: unaTarifa	unaTarifa < 0 ifTrue: [ TarifaInvalida signal ].	tarifa := unaTarifa! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:21'!costoTotalSinDescuento	^ duracion * tarifa! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:21'!calcularDescuento	^ self costoTotalSinDescuento * self calcularPorcentajeDescuento ! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:13'!calcularPorcentajeDescuento 	^ self esDeLargaDuracion ifTrue: [ 0.10 ] ifFalse: [ 0 ]! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:13'!esDeLargaDuracion	^ duracion > 30	! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:21'!costoTotalConDescuento	^ self costoTotalSinDescuento - self calcularDescuento ! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/17/2022 16:27'!descripcion	self subclassResponsibility ! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:06'!horario: unHorario	( unHorario between: 1 and: 24 ) ifFalse: [ HorarioInvalido signal ].	horario := unHorario! !!Llamada methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:06'!duracion: unaDuracion	unaDuracion < 0 ifTrue: [ DuracionInvalida signal ].	duracion := unaDuracion! !!Llamada methodsFor: 'initialization' stamp: 'CarlosCastillo 4/18/2022 20:10'!initialize 	duracion := 0.	horario := 0.	tarifa := 0! !Llamada subclass: #LlamadaInternacional	instanceVariableNames: 'destino'	classVariableNames: ''	package: 'TP1'!!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:48'!descripcion	^ 'La llamada se hizo a ' , destino , ' a las ' , horario asString, ' hs durando ' , duracion asString, ' minutos'! !!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/17/2022 16:23'!destino: unDestino	destino := unDestino! !!LlamadaInternacional methodsFor: 'initialization' stamp: 'CarlosCastillo 4/17/2022 17:18'!initialize 	super initialize.	destino := ''! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LlamadaInternacional class	instanceVariableNames: ''!!LlamadaInternacional class methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:01'!conDuracion: unaDuracion conHorario: unHorario conTarifa: unaTarifa conDestino: unDestino	^ (self new) duracion: unaDuracion; horario: unHorario; tarifa: unaTarifa; destino: unDestino	! !Llamada subclass: #LlamadaNacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!LlamadaNacional methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/17/2022 16:43'!descripcion 	^ 'La llamada se hizo a las ', horario asString, ' hs durando ', duracion asString, ' minutos'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LlamadaNacional class	instanceVariableNames: ''!!LlamadaNacional class methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 22:57'!conDuracion: unaDuracion conHorario: unHorario conTarifa: unaTarifa	^ (self new) duracion: unaDuracion; horario: unHorario; tarifa: unaTarifa! !Error subclass: #TarifaInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #TeleAlgo	instanceVariableNames: 'abonoMensual llamadas horariosHabiles tarifaInternacional'	classVariableNames: ''	package: 'TP1'!!TeleAlgo methodsFor: 'private' stamp: 'CarlosCastillo 4/17/2022 17:23'!calcularTarifaPorMinutoSegunHorario: unHorario	^ (self horarioEstaEnHorarioHabil: unHorario) ifTrue: [ 0.2 ] ifFalse: [ 0.1 ]! !!TeleAlgo methodsFor: 'private' stamp: 'CarlosCastillo 4/17/2022 17:19'!horarioEstaEnHorarioHabil: unHorario	^ (horariosHabiles includes: unHorario)! !!TeleAlgo methodsFor: 'initialization' stamp: 'CarlosCastillo 4/17/2022 15:55'!initialize	abonoMensual := 0.	llamadas := OrderedCollection new.	horariosHabiles := Interval from: 8 to: 20.	tarifaInternacional := 0! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/17/2022 15:42'!aplicarTarifaPorMinutoALlamadaInternacional: unaTarifa	tarifaInternacional := unaTarifa! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/17/2022 13:50'!abonoMensual: unAbonoMensual	abonoMensual := unAbonoMensual ! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:21'!consultarPorLlamadaEfectuadaMasCostosa	| llamadaMasCostosa |	llamadaMasCostosa := llamadas detectMax: [ :llamada | llamada costoTotalConDescuento ].	^ 'La llamada mas costosa: ', llamadaMasCostosa descripcion! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 22:36'!registrarLlamadaNacionalConDuracion: unaDuracion HechaEnElHorario: unHorario	| tarifa  |	tarifa := self calcularTarifaPorMinutoSegunHorario: unHorario.	llamadas add: (LlamadaNacional		conDuracion: unaDuracion		conHorario: unHorario		conTarifa: tarifa)! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 23:21'!calcularGastoFinal	^ abonoMensual + (llamadas sum: [ :llamada | llamada costoTotalConDescuento ]).! !!TeleAlgo methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/18/2022 20:05'!registrarLlamadaInternacionalCon: unaDuracion HechaEnElHorario: unHorario Hacia: unDestino	llamadas add: (LlamadaInternacional		conDuracion: unaDuracion		conHorario: unHorario		conTarifa: tarifaInternacional		conDestino: unDestino)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TeleAlgo class	instanceVariableNames: ''!!TeleAlgo class methodsFor: 'as yet unclassified' stamp: 'CarlosCastillo 4/23/2022 22:05'!conAbonoMensual: unAbonoMensual	unAbonoMensual < 0 ifTrue: [ ^ nil ].	^ (self new) abonoMensual: unAbonoMensual! !