TestCase subclass: #LlamadaInternacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaInternacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:40'!test01AlObtenerInformacionDeUnaLlamadaInternacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaInternacional conDuracion: 10 conHorario: 10 conTarifa: 10 conDestino: 'Nuketown' .		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a Nuketown a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaNacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaNacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:40'!test01AlObtenerInformacionDeUnaLlamadaNacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaNacional conDuracion: 10 conHorario: 10 conTarifa: 10 .		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:41'!test04LlamadaDeMasDe30MinutosEsLlamadaDeLargaDuracion	| llamada |	llamada := Llamada new .	llamada duracion: 69 .		self assert: ( llamada esDeLargaDuracion )! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:41'!test06ParaUnaLlamadaDeLargaDuracionElDescuentoEsIgualAl10PorCiento	| llamada descuentoEsperado |		descuentoEsperado := 0.1 .	llamada := Llamada new .	llamada duracion: 69 .		self assert: ( llamada porcentajeDescuento ) equals: descuentoEsperado ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:45'!test05LlamadaDeMenosDe30MinutosNoEsLlamadaDeLargaDuracion	| llamada |	llamada := Llamada new .	llamada duracion: 69 .		self assert: ( llamada esDeLargaDuracion )! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:41'!test07ParaUnaLlamadaDeCortaDuracionNoSeAplicaDescuento	| llamada descuentoEsperado |		descuentoEsperado := 0 .	llamada := Llamada new .	llamada duracion: 29 .		self assert: ( llamada porcentajeDescuento ) equals: descuentoEsperado ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:40'!test01DuracionInvalidaAlCrearUnaLlamadaConDuracionNegativa	| llamada |	llamada := Llamada new .		self should: [			llamada duracion: -69 .	] raise: DuracionInvalida ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:40'!test02HorarioInvalidoAlCrearUnaLlamadaConHorarioFueraDelRangoDe24Horas	| llamada |	llamada := Llamada new .		self should: [		llamada horario: -69 .	] raise: HorarioInvalido ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 22:41'!test03TarifaInvalidaAlCrearUnaLlamadaConTarifaNegativa	| llamada |	llamada := Llamada new .		self should: [		llamada tarifa: -69 .	] raise: TarifaInvalida ! !TestCase subclass: #TeleAlgoTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test5SeRegistraUnaLlamadaInternacionalYOtraNacionalEnHorarioHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	montoEsperadoAPagar := abonoMensual + 20 + 2.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 2.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Paraguay'.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test4SeRegistraUnaLlamadaInternacionalYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 110.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 22 Hacia: 'Uruguay'.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test1SeFacturanLasLlamadasDeUnUsuarioQueNoRealizoLlamadasDuranteElMesYPagaSoloElAbonoMensualFijo	| montoEsperadoAPagar teleAlgo abonoMensual |		"Arrange"	montoEsperadoAPagar := 100.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 20:15'!test6SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| teleAlgo abonoMensual |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	teleAlgo registrarLlamadaInternacionalCon: 20 HechaEnElHorario: 24 Hacia: 'Paraguay'.	self		assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )		equals:		'La llamada mas costosa: La llamada se hizo a Paraguay a las 24 hs durando 20 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test3SeRegistraUnaLlamadaNacionallYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 101.	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario no habil es de 0,1 $"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test2SeRegistraUnaLlamadaNacionalEnHoraHabilYSeFactura	| montoEsperadoAPagar teleAlgo abonoMensual |	"Arrange"	montoEsperadoAPagar := 102. "El abono mas el costo de todas las llamadas"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17.	"El horario es un numero natural que va desde la hora 1 a la hora 24"	"Act and Assert"	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar	"El precio por min en horario habil es de 0,2 $"	"El horario habil es de 8 a 20"! !!TeleAlgoTest methodsFor: 'tests' stamp: 'AgustinRodriguez 4/12/2022 19:22'!test7SeRegistraUnaLlamadaQueAlDurarMasDe30MinutosSeLeAplicaUnDescuentoDel10PorCiento	| teleAlgo abonoMensual montoEsperadoAPagar |	"Arrange"	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	montoEsperadoAPagar := 103.6.	"Act and Assert"	teleAlgo registrarLlamadaNacionalConDuracion: 40 HechaEnElHorario: 24.	self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar! !TestCase subclass: #TeleAlgoTestMutantes	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 11:45'!test01NoSePuedeCrearUnaTeleAlgoConUnAbonoMensualNegativo	| teleAlgo |		self should: [ 		teleAlgo := TeleAlgo conAbonoMensual: -69.	] raise: AbonoMensualInvalido ! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 12:30'!test04ParaUnHorarioFueraDelRangoDeHorasHabilesLaTarifaPorMinutosEsDe10Centavos	| teleAlgo horarioHabil tarifaHorarioHabil |		teleAlgo := TeleAlgo new .	horarioHabil := 1 .	tarifaHorarioHabil := 0.1 .		self assert: ( teleAlgo calcularTarifaPorMinutoSegunHorario: horarioHabil ) equals: tarifaHorarioHabil .! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 12:31'!test03ParaUnHorarioDentroDelRangoDeHorasHabilesLaTarifaPorMinutosEsDe20Centavos	| teleAlgo horarioHabil tarifaHorarioHabil |		teleAlgo := TeleAlgo new .	horarioHabil := 10 .	tarifaHorarioHabil := 0.2 .		self assert: ( teleAlgo calcularTarifaPorMinutoSegunHorario: horarioHabil ) equals: tarifaHorarioHabil .! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 20:41'!test09SeRegistraLlamadaInternacionalDeLargaDuracionPeroNoSeAplicaElDescuento	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 136 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1 .		teleAlgo registrarLlamadaInternacionalCon: 40 HechaEnElHorario: 10 Hacia: 'Nuketown' .		self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar ! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 12:24'!test05SiNoSeRegistranAlgunasLlamadasNoSePuedeBuscarLaLlamadaMasCostosaRealizada	| teleAlgo abonoMensual |	abonoMensual := 100.	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual.	self should: [		teleAlgo consultarPorLlamadaEfectuadaMasCostosa.	] raise: SinLlamadasRegistradas ! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 12:44'!test08SeRegistranAlgunasLlamadasYSeCobraElMontoFinalEsperado	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 203 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 10 .		teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22 .	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17 .	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Yemen' .		self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar ! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 11:54'!test02DadoUnHorarioDentroDelRangoDe8A22HorasEsUnHorarioHabil	| horario teleAlgo |		horario := 12.	teleAlgo := TeleAlgo new.		self assert: ( teleAlgo horarioEstaEnHorarioHabil: horario )! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 20:15'!test07SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 102 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22 .	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17 .		self assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )	equals:		'La llamada mas costosa: La llamada se hizo a las 17 hs durando 10 minutos'! !!TeleAlgoTestMutantes methodsFor: 'tests' stamp: 'CarlosCastillo 4/24/2022 12:28'!test06SeRegistranLlamadasInternacionalesSinHaberEstablecidoUnaTarifaInternacionalYEstasSeFacturanSinCosto	| abonoMensual teleAlgo |		abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Nuketown' .	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Kino der Toten' .		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual .! !