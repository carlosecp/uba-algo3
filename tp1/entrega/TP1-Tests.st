TestCase subclass: #LlamadaInternacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaInternacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 12:48'!test02AUnaLlamadaInternacionalDeLargaDuracionSeLeAplicaElDescuento	| costoEsperado llamada |		costoEsperado := 90 .	llamada := LlamadaInternacional conDuracion: 100 conHorario: 10 conTarifa: 1 conDestino: 'Nuketown' .		self assert: ( llamada costoTotal ) equals: costoEsperado ! !!LlamadaInternacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 13:53'!test03NoSePuedeCrearUnaLlamadaInternacionalSinDestino	| llamada |		self should: [		llamada := LlamadaInternacional conDuracion: 100 conHorario: 10 conTarifa: 1 conDestino: ''	] raise: DestinoInvalido! !!LlamadaInternacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:12'!test01AlObtenerInformacionDeUnaLlamadaInternacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaInternacional conDuracion: 10 conHorario: 10 conTarifa: 10 conDestino: 'Nuketown' .		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a Nuketown a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaNacionalTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaNacionalTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:35'!test01AlObtenerInformacionDeUnaLlamadaNacionalSeObtieneLaInformacionCorrecta	| llamada |		llamada := LlamadaNacional conDuracion: 10 conHorario: 10 .		self assert: ( llamada descripcion ) equals: 'La llamada se hizo a las 10 hs durando 10 minutos'	! !TestCase subclass: #LlamadaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 09:29'!test04LlamadaDeMenosDe30MinutosNoEsLlamadaDeLargaDuracion	| llamada |		llamada := Llamada new .	llamada duracion: 29 .		self deny: ( llamada esDeLargaDuracion )! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:40'!test01DuracionInvalidaAlCrearUnaLlamadaConDuracionNegativa	| duracionInvalida llamada |		duracionInvalida := -69 .	llamada := Llamada new .		self should: [			llamada duracion: duracionInvalida.	] raise: DuracionInvalida ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:40'!test02HorarioInvalidoAlCrearUnaLlamadaConHorarioFueraDelRangoDe24Horas	| horarioInvalido llamada |		horarioInvalido := -69 .	llamada := Llamada new .		self should: [		llamada horario: horarioInvalido	] raise: HorarioInvalido ! !!LlamadaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 09:29'!test03LlamadaDeMasDe30MinutosEsLlamadaDeLargaDuracion	| llamada |		llamada := Llamada new .	llamada duracion: 69 .		self assert: ( llamada esDeLargaDuracion )! !TestCase subclass: #TarifaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!TarifaTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:39'!test01MontoTarifaInvalidoAlCrearUnaTarifaConMontoNegativo	| montoInvalido tarifa |		montoInvalido := -69 .	tarifa := Tarifa new .		self should: [ 		tarifa monto: montoInvalido 	 ] raise: MontoTarifaInvalido ! !TestCase subclass: #TeleAlgoTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:31'!test05SeRegistranAlgunasLlamadasYSeCobraElMontoFinalEsperado	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 203 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 10 .		teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22 .	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17 .	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Yemen' .		self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar ! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:31'!test03SeRegistranLlamadasInternacionalesSinHaberEstablecidoUnaTarifaInternacionalEstasSeFacturanSinCosto	| abonoMensual teleAlgo |		abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Nuketown' .	teleAlgo registrarLlamadaInternacionalCon: 10 HechaEnElHorario: 10 Hacia: 'Kino der Toten' .		self assert: ( teleAlgo calcularGastoFinal ) equals: abonoMensual .! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:32'!test06SeRegistraUnaLlamadaInternacionalDeLargaDuracionYSeLeAplicaElDescuento	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 136 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo aplicarTarifaPorMinutoALlamadaInternacional: 1 .		teleAlgo registrarLlamadaInternacionalCon: 40 HechaEnElHorario: 10 Hacia: 'Nuketown' .		self assert: ( teleAlgo calcularGastoFinal ) equals: montoEsperadoAPagar ! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:31'!test04SeRegistranAlgunasLlamadasYSeBuscaLaLlamadaMasCostosaRealizadaYDevuelveUnaDescripcionDeLaMisma	| montoEsperadoAPagar abonoMensual teleAlgo |		montoEsperadoAPagar := 102 .	abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .		teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 22 .	teleAlgo registrarLlamadaNacionalConDuracion: 10 HechaEnElHorario: 17 .		self assert: ( teleAlgo consultarPorLlamadaEfectuadaMasCostosa )	equals:		'La llamada mas costosa: La llamada se hizo a las 17 hs durando 10 minutos'! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:34'!test01NoSePuedeCrearUnTeleAlgoConUnAbonoMensualNegativo	| teleAlgo |		self should: [ 		teleAlgo := TeleAlgo conAbonoMensual: -69	] raise: AbonoMensualInvalido ! !!TeleAlgoTest methodsFor: 'tests' stamp: 'CarlosCastillo 4/25/2022 00:34'!test02SinLlamadasRegistradasAlBuscarLaLlamadaMasCostosaRealizadaSinHaberRegistradoLlamadas	| teleAlgo abonoMensual |		abonoMensual := 100 .	teleAlgo := TeleAlgo conAbonoMensual: abonoMensual .	self should: [		teleAlgo consultarPorLlamadaEfectuadaMasCostosa	] raise: SinLlamadasRegistradas ! !